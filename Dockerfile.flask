# Stage 1: Builder
FROM python:3.10-slim-buster AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libpq-dev \
    python3-dev \
    libffi-dev \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt .

# Install Python packages in batches to better handle errors
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir --prefix=/install -r requirements.txt || \
    (echo "Full requirements installation failed, trying with core dependencies only" && \
     pip install --no-cache-dir --prefix=/install \
        flask \
        gunicorn \
        sqlalchemy \
        flask-sqlalchemy \
        flask-migrate \
        flask-bcrypt \
        flask-wtf \
        python-dotenv \
        psycopg2-binary)

# Stage 2: Final container
FROM python:3.10-slim-buster

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# Create dedicated user
RUN useradd -m appuser

# Set up directories
RUN mkdir -p /app/backend /home/data \
    && chown -R appuser:appuser /app /home/data

# Copy installed packages from builder
COPY --from=builder /install /usr/local

# Copy Flask app code
COPY app_flask.py .
COPY backend/flask_app/ ./backend/flask_app/
COPY backend/common/ ./backend/common/
COPY backend/models.py ./backend/
COPY backend/__init__.py ./backend/

# Create script to start the application
RUN echo '#!/bin/bash\n\
PORT=${PORT:-5000}\n\
GUNICORN_WORKERS=${GUNICORN_WORKERS:-2}\n\
echo "Starting Gunicorn on port $PORT with $GUNICORN_WORKERS workers"\n\
exec gunicorn -w $GUNICORN_WORKERS -b 0.0.0.0:$PORT --timeout 120 backend.flask_app.flask_app:app\n' > /app/start.sh

RUN chmod +x /app/start.sh
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

EXPOSE 5000 8000

# Use the startup script
CMD ["/app/start.sh"]
