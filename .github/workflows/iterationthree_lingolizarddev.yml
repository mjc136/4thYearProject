name: Build, Test, and Deploy LingoLizard to Azure

on:
  push:
    branches:
      - IterationThree
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set Up Python
      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Ensure compatible Python version

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest pytest-asyncio  # Ensure testing tools are installed

      # Step 4: Run Tests
      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest --maxfail=3 --disable-warnings  # Stop after 3 failures

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read  # Required for actions/checkout

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t mjc136/lingolizard:latest .

      # Step 4: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push mjc136/lingolizard:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Login to Azure
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Step 2: Deploy Container to Azure Web App
      - name: Deploy to Azure Web App
        run: |
          az webapp config container set \
            --name LingoLizardDev \
            --resource-group LingoLizard-Dev \
            --container-image-name mjc136/lingolizard:latest \
            --container-registry-url https://index.docker.io/v1/

      # Step 3: Restart Azure Web App (Ensure changes take effect)
      - name: Restart Azure Web App
        run: |
          az webapp restart --name LingoLizardDev --resource-group LingoLizard-Dev

      # Step 4: Wait for Azure Deployment to Complete
      - name: Wait for deployment to settle
        run: sleep 30  # Prevents SCM restart issue

      # Step 5: Health Check with Retry
      - name: Health Check
        run: |
          echo "Performing health check..."
          for i in {1..5}; do
            status_code=$(curl -o /dev/null -s -w "%{http_code}" https://lingolizarddev.azurewebsites.net)
            if [ "$status_code" -eq 200 ]; then
              echo "Health check passed!"
              exit 0
            fi
            echo "Retrying health check ($i/5)..."
            sleep 10
          done
          echo "Health check failed!"
          exit 1
