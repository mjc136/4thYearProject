# Stage 1: Builder
FROM python:3.10-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache --virtual .build-deps \
    gcc \
    musl-dev \
    postgresql-dev \
    python3-dev \
    libffi-dev \
    openssl-dev

# Copy requirements file
COPY requirements.txt .

# Install Python packages
RUN pip install --no-cache-dir --prefix=/install -r requirements.txt

# Stage 2: Final container
FROM python:3.10-alpine

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache \
    libpq \
    libstdc++ \
    libffi

# Create a dedicated user for security
RUN adduser -D appuser

# Copy installed packages from builder
COPY --from=builder /install /usr/local

# Copy Bot app code
COPY app_bot.py .
COPY backend/bot/ ./backend/bot/
COPY backend/common/ ./backend/common/
COPY backend/models.py ./backend/
COPY backend/__init__.py ./backend/

# Set ownership of app files to appuser
RUN chown -R appuser:appuser /app

# Run as non-root user
USER appuser

EXPOSE 3978

# Start Bot app normally (aiohttp web server)
CMD ["python", "app_bot.py"]